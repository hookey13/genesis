"""Initial migration with core trading tables

Revision ID: 9c9ebfc25bb5
Revises: 
Create Date: 2025-08-28 08:58:50.378822+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '001'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('candles',
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('timeframe', sa.String(length=5), nullable=False),
    sa.Column('open_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('open', sa.NUMERIC(precision=38, scale=18), nullable=False),
    sa.Column('high', sa.NUMERIC(precision=38, scale=18), nullable=False),
    sa.Column('low', sa.NUMERIC(precision=38, scale=18), nullable=False),
    sa.Column('close', sa.NUMERIC(precision=38, scale=18), nullable=False),
    sa.Column('volume', sa.NUMERIC(precision=38, scale=18), nullable=False),
    sa.CheckConstraint("timeframe IN ('1m', '5m', '15m', '1h', '4h', '1d')", name='check_candle_timeframe'),
    sa.CheckConstraint('high >= close', name='check_high_gte_close'),
    sa.CheckConstraint('high >= low', name='check_high_gte_low'),
    sa.CheckConstraint('high >= open', name='check_high_gte_open'),
    sa.CheckConstraint('low <= close', name='check_low_lte_close'),
    sa.CheckConstraint('low <= open', name='check_low_lte_open'),
    sa.CheckConstraint('volume >= 0', name='check_volume_non_negative'),
    sa.PrimaryKeyConstraint('symbol', 'timeframe', 'open_time')
    )
    op.create_index('idx_candles_lookup', 'candles', ['symbol', 'timeframe', 'open_time'], unique=False)
    op.create_table('inbox_events',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('dedupe_key', sa.String(length=128), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('payload', sa.JSON(), nullable=False),
    sa.Column('consumed_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('dedupe_key')
    )
    op.create_index('idx_inbox_unconsumed', 'inbox_events', ['consumed_at'], unique=False)
    op.create_table('instruments',
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('base', sa.String(length=10), nullable=False),
    sa.Column('quote', sa.String(length=10), nullable=False),
    sa.Column('tick_size', sa.NUMERIC(precision=38, scale=18), nullable=False),
    sa.Column('lot_step', sa.NUMERIC(precision=38, scale=18), nullable=False),
    sa.Column('min_notional', sa.NUMERIC(precision=38, scale=18), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('symbol')
    )
    op.create_table('journal',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('level', sa.String(length=10), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('ctx', sa.JSON(), nullable=True),
    sa.CheckConstraint("level IN ('debug', 'info', 'warn', 'error', 'critical')", name='check_journal_level'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_journal_at'), 'journal', ['at'], unique=False)
    op.create_table('outbox_events',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('payload', sa.JSON(), nullable=False),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('retries', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_outbox_unprocessed', 'outbox_events', ['processed_at'], unique=False)
    op.create_table('positions',
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('qty', sa.NUMERIC(precision=38, scale=18), nullable=False),
    sa.Column('avg_entry_price', sa.NUMERIC(precision=38, scale=18), nullable=False),
    sa.Column('realised_pnl', sa.NUMERIC(precision=38, scale=18), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.CheckConstraint('avg_entry_price >= 0', name='check_avg_price_non_negative'),
    sa.PrimaryKeyConstraint('symbol')
    )
    op.create_table('sessions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ended_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('state', sa.String(length=20), nullable=False),
    sa.Column('reason', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.CheckConstraint("state IN ('running', 'paused', 'shutdown')", name='check_session_state'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_sessions_state', 'sessions', ['state'], unique=False)
    op.create_index(op.f('ix_sessions_started_at'), 'sessions', ['started_at'], unique=False)
    op.create_table('orders',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('client_order_id', sa.String(length=64), nullable=False),
    sa.Column('exchange_order_id', sa.String(length=64), nullable=True),
    sa.Column('session_id', sa.String(length=36), nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('side', sa.String(length=10), nullable=False),
    sa.Column('type', sa.String(length=10), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('qty', sa.NUMERIC(precision=38, scale=18), nullable=False),
    sa.Column('filled_qty', sa.NUMERIC(precision=38, scale=18), nullable=False),
    sa.Column('price', sa.NUMERIC(precision=38, scale=18), nullable=True),
    sa.Column('avg_price', sa.NUMERIC(precision=38, scale=18), nullable=True),
    sa.Column('time_in_force', sa.String(length=10), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_error', sa.Text(), nullable=True),
    sa.CheckConstraint("side IN ('buy', 'sell')", name='check_order_side'),
    sa.CheckConstraint("status IN ('new', 'partially_filled', 'filled', 'cancelled', 'rejected', 'expired')", name='check_order_status'),
    sa.CheckConstraint("type IN ('limit', 'market')", name='check_order_type'),
    sa.CheckConstraint('filled_qty <= qty', name='check_filled_qty_not_exceeding'),
    sa.CheckConstraint('filled_qty >= 0', name='check_filled_qty_non_negative'),
    sa.CheckConstraint('qty > 0', name='check_order_qty_positive'),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.ForeignKeyConstraint(['symbol'], ['instruments.symbol'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('client_order_id'),
    sa.UniqueConstraint('exchange_order_id')
    )
    op.create_index('idx_orders_session', 'orders', ['session_id'], unique=False)
    op.create_index('idx_orders_symbol_status', 'orders', ['symbol', 'status'], unique=False)
    op.create_table('pnl_ledger',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('session_id', sa.String(length=36), nullable=False),
    sa.Column('event_type', sa.String(length=20), nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=True),
    sa.Column('amount_quote', sa.NUMERIC(precision=38, scale=18), nullable=False),
    sa.Column('at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ref_type', sa.String(length=20), nullable=True),
    sa.Column('ref_id', sa.String(length=36), nullable=True),
    sa.CheckConstraint("event_type IN ('trade', 'fee', 'adjustment', 'funding')", name='check_pnl_event_type'),
    sa.CheckConstraint("ref_type IN ('order', 'trade') OR ref_type IS NULL", name='check_pnl_ref_type'),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_pnl_session_time', 'pnl_ledger', ['session_id', 'at'], unique=False)
    op.create_index(op.f('ix_pnl_ledger_at'), 'pnl_ledger', ['at'], unique=False)
    op.create_table('trades',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('exchange_trade_id', sa.String(length=64), nullable=False),
    sa.Column('order_id', sa.String(length=36), nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('side', sa.String(length=10), nullable=False),
    sa.Column('qty', sa.NUMERIC(precision=38, scale=18), nullable=False),
    sa.Column('price', sa.NUMERIC(precision=38, scale=18), nullable=False),
    sa.Column('fee_ccy', sa.String(length=10), nullable=False),
    sa.Column('fee_amount', sa.NUMERIC(precision=38, scale=18), nullable=False),
    sa.Column('trade_time', sa.DateTime(timezone=True), nullable=False),
    sa.CheckConstraint("side IN ('buy', 'sell')", name='check_trade_side'),
    sa.CheckConstraint('fee_amount >= 0', name='check_fee_non_negative'),
    sa.CheckConstraint('price > 0', name='check_trade_price_positive'),
    sa.CheckConstraint('qty > 0', name='check_trade_qty_positive'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['symbol'], ['instruments.symbol'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('exchange_trade_id')
    )
    op.create_index('idx_trades_order', 'trades', ['order_id'], unique=False)
    op.create_index('idx_trades_symbol_time', 'trades', ['symbol', 'trade_time'], unique=False)
    op.create_index(op.f('ix_trades_trade_time'), 'trades', ['trade_time'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_trades_trade_time'), table_name='trades')
    op.drop_index('idx_trades_symbol_time', table_name='trades')
    op.drop_index('idx_trades_order', table_name='trades')
    op.drop_table('trades')
    op.drop_index(op.f('ix_pnl_ledger_at'), table_name='pnl_ledger')
    op.drop_index('idx_pnl_session_time', table_name='pnl_ledger')
    op.drop_table('pnl_ledger')
    op.drop_index('idx_orders_symbol_status', table_name='orders')
    op.drop_index('idx_orders_session', table_name='orders')
    op.drop_table('orders')
    op.drop_index(op.f('ix_sessions_started_at'), table_name='sessions')
    op.drop_index('idx_sessions_state', table_name='sessions')
    op.drop_table('sessions')
    op.drop_table('positions')
    op.drop_index('idx_outbox_unprocessed', table_name='outbox_events')
    op.drop_table('outbox_events')
    op.drop_index(op.f('ix_journal_at'), table_name='journal')
    op.drop_table('journal')
    op.drop_table('instruments')
    op.drop_index('idx_inbox_unconsumed', table_name='inbox_events')
    op.drop_table('inbox_events')
    op.drop_index('idx_candles_lookup', table_name='candles')
    op.drop_table('candles')
    # ### end Alembic commands ###