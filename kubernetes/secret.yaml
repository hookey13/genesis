# IMPORTANT: This is a template file. Do not commit actual secrets to version control.
# 
# To create the actual secret:
# 1. Copy this file to secret-actual.yaml (which should be in .gitignore)
# 2. Replace the placeholder values with base64-encoded actual values
# 3. Apply with: kubectl apply -f secret-actual.yaml
#
# To encode values:
# echo -n 'your-value' | base64
#
# To decode values:
# echo 'encoded-value' | base64 -d

apiVersion: v1
kind: Secret
metadata:
  name: genesis-secrets
  namespace: genesis
  labels:
    app: genesis
    component: secrets
    app.kubernetes.io/name: genesis
    app.kubernetes.io/component: secrets
  annotations:
    description: "Sensitive configuration for Genesis Trading System"
    rotation-policy: "30-days"
type: Opaque
data:
  # Binance API credentials (base64 encoded)
  binance-api-key: UFVULVlPVVItQVBJLUtFWS1IRVJF  # PUT-YOUR-API-KEY-HERE
  binance-api-secret: UFVULVlPVVItQVBJLVNFQ1JFVC1IRVJF  # PUT-YOUR-API-SECRET-HERE
  
  # Database credentials (base64 encoded)
  database-url: c3FsaXRlOi8vLy9hcHAvLmdlbmVzaXMvZGF0YS9nZW5lc2lzLmRi  # sqlite:////app/.genesis/data/genesis.db
  
  # Redis connection (optional, base64 encoded)
  redis-url: cmVkaXM6Ly86cGFzc3dvcmRAcmVkaXMtc2VydmljZTo2Mzc5LzA=  # redis://:password@redis-service:6379/0
  
  # Monitoring credentials (base64 encoded)
  prometheus-token: UFVULVBST01FVEhFVVMtVE9LRU4tSEVSRQ==  # PUT-PROMETHEUS-TOKEN-HERE
  grafana-api-key: UFVULUdSQUZBTkEtQVBJLUtFWS1IRVJF  # PUT-GRAFANA-API-KEY-HERE
  
  # Backup encryption key (base64 encoded)
  backup-encryption-key: UFVULUJBQ0tVUC1FTkNSWVBUSU9OLUtFWS1IRVJF  # PUT-BACKUP-ENCRYPTION-KEY-HERE
  
  # Webhook URLs (base64 encoded)
  alert-webhook-url: UFVULVdFQkhPT0stVVJMLUhFUkU=  # PUT-WEBHOOK-URL-HERE
---
apiVersion: v1
kind: Secret
metadata:
  name: genesis-tls
  namespace: genesis
  labels:
    app: genesis
    component: tls
type: kubernetes.io/tls
data:
  # TLS certificate and key (base64 encoded)
  # Generate with: openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout tls.key -out tls.crt
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t  # TLS certificate
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCi4uLgotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t  # TLS private key