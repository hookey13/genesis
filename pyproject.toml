[tool.ruff]
# Ruff configuration for Project GENESIS
line-length = 88
target-version = "py311"

select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "I",     # isort
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "UP",    # pyupgrade
    "ARG",   # flake8-unused-arguments
    "SIM",   # flake8-simplify
    "TCH",   # flake8-type-checking
    "RUF",   # Ruff-specific rules
]

ignore = [
    "E501",  # Line too long (handled by formatter)
    "B008",  # Do not perform function calls in argument defaults
    "B904",  # Allow raise without from in except blocks
    "SIM105", # Use contextlib.suppress - sometimes explicit is better
]

# Exclude common directories
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    "__pycache__",
    ".genesis",
    "venv",
    "build",
    "dist",
    "*.egg-info",
    "htmlcov",
    "docs",
]

[tool.ruff.per-file-ignores]
# Allow unused imports in __init__ files
"__init__.py" = ["F401", "F403"]
# Allow assertions in tests
"tests/*" = ["ARG"]

[tool.ruff.isort]
known-first-party = ["genesis", "config"]

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.ruff_cache
  | __pycache__
  | \.genesis
  | venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=genesis",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=95",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
    "requires_api: Tests requiring API access",
    "timeout: Test timeout in seconds (e.g., @pytest.mark.timeout(30))",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["genesis"]
omit = [
    "*/tests/*",
    "*/__init__.py",
    "*/migrations/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
fail_under = 95.0

# Critical paths requiring 100% coverage
[tool.coverage.report.paths]
critical = [
    "genesis/engine/risk_engine.py",
    "genesis/engine/executor/*.py",
    "genesis/utils/math.py",
]

exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["genesis", "config"]
skip_gitignore = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "genesis"
version = "1.0.0"
description = "An evolutionary cryptocurrency trading system with tier-based progression and tilt detection"
authors = ["Genesis Team"]
readme = "README.md"
license = "Proprietary"
homepage = "https://github.com/hookey13/genesis"
repository = "https://github.com/hookey13/genesis"
documentation = "https://github.com/hookey13/genesis/tree/main/docs"
keywords = ["cryptocurrency", "trading", "binance", "asyncio", "tilt-detection"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial :: Investment",
]
packages = [{include = "genesis"}]

[tool.poetry.dependencies]
python = "~3.11.8"

# Core dependencies (all tiers)
ccxt = "4.4.0"
rich = "13.7.0"
textual = "0.47.1"
aiohttp = "3.10.11"
websockets = "13.1"
pydantic = "2.5.3"
structlog = "24.1.0"
SQLAlchemy = "2.0.25"
alembic = "1.13.1"
pandas = "2.2.3"
numpy = "1.26.4"
supervisor = "4.2.5"
psutil = "5.9.8"
boto3 = "1.35.0"
python-dotenv = "1.0.0"

[tool.poetry.group.sniper]
optional = true

[tool.poetry.group.sniper.dependencies]
# Sniper tier has only base dependencies

[tool.poetry.group.hunter]
optional = true

[tool.poetry.group.hunter.dependencies]
# Hunter tier adds slicing libraries
scipy = "^1.11.0"
statsmodels = "^0.14.0"

[tool.poetry.group.strategist]
optional = true

[tool.poetry.group.strategist.dependencies]
# Strategist tier includes hunter dependencies plus advanced analytics
scipy = "^1.11.0"
statsmodels = "^0.14.0"
scikit-learn = "^1.3.0"
ta-lib = "^0.4.28"

[tool.poetry.group.dev.dependencies]
# Development and testing tools
pytest = "^8.0.0"
pytest-asyncio = "^0.23.0"
pytest-cov = "^4.1.0"
pytest-timeout = "^2.2.0"
pytest-mock = "^3.12.0"
black = "^24.1.1"
ruff = "^0.1.14"
mypy = "^1.8.0"
pre-commit = "^3.6.0"
pip-tools = "^7.3.0"
safety = "^3.0.0"
pip-audit = "^2.6.0"
bandit = "^1.7.0"
types-requests = "^2.31.0"
types-python-dateutil = "^2.8.0"
ipython = "^8.19.0"
jupyter = "^1.0.0"

[tool.poetry.scripts]
genesis = "genesis.__main__:main"
genesis-emergency-close = "scripts.emergency_close:main"
genesis-migrate-db = "scripts.migrate_db:main"

[tool.poetry.extras]
hunter = ["scipy", "statsmodels"]
strategist = ["scipy", "statsmodels", "scikit-learn", "ta-lib"]

[tool.poetry-dynamic-versioning]
enable = false

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/hookey13/genesis/issues"
"Changelog" = "https://github.com/hookey13/genesis/blob/main/CHANGELOG.md"